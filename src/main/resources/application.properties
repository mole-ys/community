server.port=8080
#项目访问路径
#server.servlet.context-path=/community
server.servlet.context-path=

spring.thymeleaf.cache=false
# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
#解决循环依赖
spring.main.allow-circular-references=true

# MybatisProperties
mybatis.mapper-locations=classpath:mapper/*.xml
#实体类包名路径，这样mybatis配置文件中实体类就可以直接写类名了
mybatis.type-aliases-package=com.mole.community.entity
#使用自动生成id机制
mybatis.configuration.useGeneratedKeys=true
#下划线映射驼峰
mybatis.configuration.mapUnderscoreToCamelCase=true

#springMVC
spring.mvc.view.prefix=/templates
spring.mvc.view.suffix=.html


# logger  输出更多的日志信息
logging.level.com.mole.community=debug

# Mailproperties email相关配置
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=1103890187@qq.com
spring.mail.password=xuikeysxhlhgjabg
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.ssl.enable=true

# community自定义内容
community.path.domain=http://localhost:8080
community.path.upload=d:/projectLog/community/upload

# redis properties
# 选择用哪个库
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379

# Kafka properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=test-consumer-group
# 是否自动提交消费者偏移量
spring.kafka.consumer.enable-auto-commit=true
# 自动提交频率 3000ms
spring.kafka.consumer.auto-commit-interval=3000

# ElasticSearchProperties
#spring.data.elasticsearch.cluster-name=mole
#节点的ip地址:端口
#spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
elasticSearch.url=127.0.0.1:9200

# TaskExecutionProperties
# 核心线程数量
spring.task.execution.pool.core-size=5
# 最大线程数量
spring.task.execution.pool.max-size=15
# 队列容量，一共能缓冲100个任务
spring.task.execution.pool.queue-capacity=100

# TaskSchedulerProperties
spring.task.scheduling.pool.size=5


# QuartzProperties
spring.quartz.job-store-type=jdbc
# 调度器名字
spring.quartz.scheduler-name=communityScheduler
# 调度器ID自动生成
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
#spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 是否采用集群方式
spring.quartz.properties.org.quartz.jobStore.isClustered=true
# 线程池
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
# 线程数量
spring.quartz.properties.org.quartz.threadPool.threadCount=5


# wk自定义内容
wk.image.command=d:/work/wkhtmltopdf/bin/wkhtmltoimage
wk.image.storage=d:/work/data/wk-images

# qiniu自定义内容
# AK
qiniu.key.access=1-DG0R0Iw7USfm8SR1_yscUgji643IkI4oqeR1dU
# SK
qiniu.key.secret=VC1jHNPYqaShSKCxk-Shcws8UxVPAypNBqPft9uf
# 两个空间的名字和域名
qiniu.bucket.header.name=mole-community-header
qiniu.bucket.header.url=http://rnldgqvju.hd-bkt.clouddn.com
qiniu.bucket.share.name=mole-community-share
qiniu.bucket.share.url=http://rnld8bn1k.hd-bkt.clouddn.com

# caffeine自定义内容
# 缓存空间一共可以缓存多少对象
caffeine.posts.max-size=15
# 过期时间180s
caffeine.posts.expire-seconds=180

# actuator
# 要暴露哪个端点
management.endpoints.web.exposure.include=*
# 排除暴露哪个断点
management.endpoints.web.exposure.exclude=info,caches