<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mole.community.dao.MessageMapper">
    <!--
        mapper接口和映射文件保证两个一致：
        a>mapper接口的全类名和映射文件的命名空间（namespace）保持一致
        b>mapper接口中方法的方法名和映射文件中编写SQL的标签的id属性保持一致
    -->

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

<!--    List<Message> selectConversationsByUserId(int userId, int limit);-->
    <select id="selectConversationsByUserId" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where id in (
            select max(id) from message
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        )
        order by id desc
    </select>

<!--    int selectConversationCount(int userId);-->
<!--    子查询表示统计最大id的数量-->
    <select id="selectConversationCount" resultType="int">
        select count(m.maxId) from(
            select max(id) as maxId from message
            where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
            group by conversation_id
        ) as m
    </select>

<!--    List<Message> selectLettersByConversationId(String conversationId, int limit);-->
    <select id="selectLettersByConversationId" resultType="Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
    </select>

<!--    int selectLetterCount(String conversationId);-->
    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

<!--    int selectLetterUnreadCount(int userId, String conversationId);-->
    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

<!--    int insertMessage(Message message);-->
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message(<include refid="insertFields"></include>)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

<!--    int updateStatus(List<Integer> ids, int status);-->
    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>